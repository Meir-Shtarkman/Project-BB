#include <iostream>
using namespace std;

#include "ElectionRoundh.h"

const int Size = 20;

void cleanbuffer()
{
	int c;
	do
	{
		c = getchar();
	} while (c != EOF && c != '\n');
}


int main()
{
	int month = 1;
	int year = 2001;
	ElectionRound round;
	if (!round.openElctionround(month, year))
	{

	}
	char party1name[Size] = "Likud";
	int party1spectrum = 1;
	Establishment_Date Edate;
	Edate.setDay(17);
	Edate.setMonth(10);
	Edate.setYear(1973);
	if (!round.addParty(party1name, Edate, party1spectrum))
	{

	}
	char party3name[Size] = "Avoda";
	party1spectrum = 0;
	Edate.setDay(16);
	Edate.setMonth(2);
	Edate.setYear(1954);
	if (!round.addParty(party3name, Edate, party1spectrum))
	{

	}
	char party2name[Size] = "Kahol Lavan";
	party1spectrum = 2;
	Edate.setDay(3);
	Edate.setMonth(1);
	Edate.setYear(2019);
	if (!round.addParty(party2name, Edate, party1spectrum))
	{

	}

	int BallotID = 120;
	Address addresss;
	char city[Size] = "Tel Aviv";
	char street[Size] = "Dizingof";
	addresss.setCity(city);
	addresss.setHouse_Number(2);
	addresss.setStreet(street);
	if (!round.addBallot(BallotID, addresss))
	{

	}

	BallotID = 250;
	char city2[Size] = "Hifa";
	char street2[Size] = "Hertzel";
	addresss.setCity(city2);
	addresss.setHouse_Number(72);
	addresss.setStreet(street2);
	if (!round.addBallot(BallotID, addresss))
	{

	}

	int partynumber = 0;
	char Name[Size] = "Moshe Hagibor";
	char manId[Size] = "456111231";
	Citizen man;
	man.setName(Name);
	man.setBirthday(1991);
	man.setBallot(round.getballots()[0]);
	man.setID(manId);
	man.setCandidate(true);
	if (!round.addVoter(man, partynumber))
	{

	}

	partynumber = 1;
	char Name2[Size] = "David Rosh Gadol";
	char manId2[Size] = "456187461";
	man.setName(Name2);
	man.setBirthday(1984);
	man.setBallot(round.getballots()[1]);
	man.setID(manId2);
	man.setCandidate(true);
	if (!round.addVoter(man, partynumber))
	{

	}

	partynumber = 2;
	char Name3[Size] = "Michael Oznei Pil";
	char manId3[Size] = "789487461";
	man.setName(Name3);
	man.setBirthday(1987);
	man.setBallot(round.getballots()[0]);
	man.setID(manId3);
	man.setCandidate(true);
	if (!round.addVoter(man, partynumber))
	{

	}
	
	partynumber = -1;
	char Name4[Size] = "Liran Hulcha Afora";
	char manId4[Size] = "789412341";
	man.setName(Name4);
	man.setBirthday(1957);
	man.setBallot(round.getballots()[1]);
	man.setID(manId4);
	man.setCandidate(false);
	if (!round.addVoter(man, partynumber))
	{

	}

	partynumber = -1;
	char Name5[Size] = "Ruven Hamalah";
	char manId5[Size] = "784412341";
	man.setName(Name5);
	man.setBirthday(1957);
	man.setBallot(round.getballots()[1]);
	man.setID(manId5);
	man.setCandidate(false);
	if (!round.addVoter(man, partynumber))
	{

	}

	
	int choice;
	int ballotID;
	int ballotNumberHouse;
	char ballotCity[Size];
	char ballotStreet[Size];

	int partyIndex;
	char manName[Size];
	char manID[Size];
	int manYear;
	Ballot *manBallot;
	int ballotIndex;

	Address address;

	char partyName[Size];
	Establishment_Date partyDate;
	int partyYear, partyMonth, partyDay;
	int spectrum;

	bool Cuntinue = true;


	while (Cuntinue)
	{
		round.menu();
		cin >> choice;
		switch (choice) {
		case 1:
		{
			cout << "Enter ballot Id: ";
			cin >> ballotID;
			cout << endl << "Enter ballot city name: ";
			cleanbuffer();
			cin.getline( ballotCity,Size);
			cout << endl << "Enter ballot street name: ";
			cin.getline( ballotStreet,Size);
			cout << endl << "Enter ballot house number: ";
			cin >>ballotNumberHouse;
			cout << endl;
			address.setCity(ballotCity);
			address.setStreet(ballotStreet);
			address.setHouse_Number(ballotNumberHouse);
			round.addBallot(ballotID, address);
		}
		break;
		case 2:
		{
			cout << "Enter name : ";
			cleanbuffer();
			cin.getline(manName, Size);
			cout << endl << "Enter 9 digits ID number: ";
			cin >>manID;
			cout << endl << "Enter year of birth: ";
			cin >> manYear;
			cout << endl << "Choose ballot ID: " << endl;

			for (int j = 0; j < round.getlogBallots(); j++)
			{
				cout << (j + 1) << ". " << round.getballots()[j]->getID() << endl;
			}
			cin >> ballotIndex;
			cout << endl;

			manBallot = round.getballots()[ballotIndex-1];

			man.setName(manName);
			man.setBirthday(manYear);
			man.setBallot(manBallot);
			man.setID(manID);
			man.setCandidate(false);
			round.addVoter(man, -1);
		}
		break;
		case 3:
		{
			cout << "Enter party name" << endl;
			cleanbuffer();
			cin.getline(partyName, Size);
			cout << "Enter party establishment day of the month" << endl;
			cin >> partyDay;
			cout << "Enter party establishment month" << endl;
			cin >> partyMonth;
			cout << "Enter party establishment year" << endl;
			cin >> partyYear;
			cout << "Choose party spectrum: " << endl <<
				"1. Left" << endl << "2. Right" << endl << "3. Center" << endl;
			cin >> spectrum;
			partyDate.setDay(partyDay);
			partyDate.setMonth(partyMonth);
			partyDate.setYear(partyYear);

			round.addParty(partyName, partyDate, (spectrum - 1));//check if we need -1
		}
			break;
		case 4:
		{
			cout << "Enter name : ";
			cleanbuffer();
			cin.getline(manName, Size);
			cout << endl << "Enter 9 digits ID number : ";
			cin >> manID;
			cout << endl << "Enter year of birth: ";
			cin >> manYear;
			cout << endl << "Choose ballot ID: " << endl;

			for (int j = 0; j < round.getlogBallots(); j++)
			{
				cout << (j + 1) << ". " << round.getballots()[j]->getID() << endl;
			}
			cin >> ballotIndex;
			cout << endl << "Choose party: " << endl;
			for (int j = 0; j < round.getlogParties(); j++)
			{
				cout << (j + 1) << ". " << round.getparties()[j]->getName() << endl;
			}
			cin >> partyIndex;

			manBallot = round.getballots()[ballotIndex - 1];

			man.setName(manName);
			man.setBirthday(manYear);
			man.setBallot(manBallot);
			man.setID(manID);
			man.setCandidate(true);
			round.addVoter(man, partyIndex);
		}
		break;
		case 5:
			round.showAllBallots();
			break;
		case 6:
			round.showAllCivilans();
			break;
		case 7:
			round.showAllParties();
			break;
		case 8:
			round.startElection();
			break;
		case 9:
			round.showResults();
			break;
		case 10:
			Cuntinue = false;
			break;
		}
	}
}
